<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- jsp 이외의 경로를 접근할 수 있게 해준다. -->
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />


	<context:component-scan base-package="controller"></context:component-scan>
	<context:component-scan base-package="service"></context:component-scan>

	<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<property name="order" value="1" />
	</bean>
	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<array>
				<value>/WEB-INF/tiles/*-tiles.xml</value>
			</array>
		</property>
	</bean>

	<!-- controller 에서 return 할때, prefix와 suffix를 미리 설정해준다. -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2"></property>
	</bean>


	<!-- datasource 및 sqlSessionTempalte 등록 -->
	<bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="ds">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@13.124.70.102:1521:xe" />
		<property name="user" value="brabo" />
		<property name="password" value="oracle" />
	</bean>

	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="fac">
		<property name="dataSource" ref="ds" />
		<property name="mapperLocations">
			<list>
				<value>/WEB-INF/mappers/*-mapper.xml</value>
			</list>
		</property>
	</bean>
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlTemplate">
		<constructor-arg name="sqlSessionFactory" ref="fac" />
	</bean>
	<!-- txManager 등록 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg name="dataSource" ref="ds" />
	</bean>

	<tx:advice id="tx" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor advice-ref="tx" pointcut="within(service.*)" />
	</aop:config>

	<!-- multipartFile 처리용 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="uploadTempDir" value="/temp" />
	</bean>

	<!-- gson 등록 -->
	<bean id="gsonBuilder" class="com.google.gson.GsonBuilder">
		<property name="dateFormat" value="yyyy/MM/dd HH:mm" />
	</bean>
	<bean id="gson" factory-bean="gsonBuilder" factory-method="create" />

	<!-- socket -->
	<websocket:handlers>
		<websocket:mapping handler="socketController" path="/socket" />
		<websocket:handshake-interceptors>
			<bean
				class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></bean>
		</websocket:handshake-interceptors>
	</websocket:handlers>



</beans>
